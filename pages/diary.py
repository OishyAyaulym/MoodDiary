import streamlit as st
from datetime import datetime
import pandas as pd
from mood_analysis import classify_sentiment_for_csv, generate_support_and_advice
from plot import plot_interactive_sentiment
from db import save_entry, get_entries_by_user
from auth import get_current_user


user = get_current_user()

if not user:
    st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.")
    st.stop()

user_id = user["id"]
st.success(f"–ü—Ä–∏–≤–µ—Ç, {user['username']}! üëã")

# --- –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ ---
st.markdown("""
    <style>
    .gradient-text {
        font-size: 20px;
        font-weight: bold;
        background: linear-gradient(135deg, #00F5A0, #00D9F5, #3E00F5, #FF00C8);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    </style>
    <h1 class="gradient-text">–î–Ω–µ–≤–Ω–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</h1>
""", unsafe_allow_html=True)
st.markdown("<h3 style='color: #717171 ;'>–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞üåû</h3>", unsafe_allow_html=True)
st.markdown("---")

# --- –í—ã–±–æ—Ä —è–∑—ã–∫–∞ ---
language = st.selectbox(
    "üåê Select language / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",
    options=["ru", "kk", "en"],
    format_func=lambda x: {"ru": "–†—É—Å—Å–∫–∏–π", "kk": "“ö–∞–∑–∞“õ—à–∞", "en": "English"}[x]
)

# --- –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ ---
user_input = st.text_area("–ö–∞–∫ –ø—Ä–æ—à–µ–ª –≤–∞—à –¥–µ–Ω—å? –ß—Ç–æ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ?")

if st.button("–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
    if not user_input.strip():
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç.")
    else:
        with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ..."):
            sentiment = classify_sentiment_for_csv(user_input)
            now = datetime.now()
            save_entry(user_id, user_input, sentiment, now.date(), now.time())

            support_response = generate_support_and_advice(user_input, language)
            st.markdown(support_response)

# --- –ì—Ä–∞—Ñ–∏–∫ ---
entries = get_entries_by_user(user_id)
if entries:
    df = pd.DataFrame(entries)
else:
    df = pd.DataFrame(columns=["user_id", "text", "sentiment", "date", "time"])
plot_interactive_sentiment(df, lang=language)